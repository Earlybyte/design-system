// Button
// ------------------------------------------------
//
// The classic button, in different colors, sizes, and states
// https://bulma.io/documentation/elements/button/

bal-button > .button {
  width: 100%;
}

.button {
  @include font-smoothing();
  @include margin(0);

  min-height: $height-medium;
  border-width: 2px;
  position: relative;
  contain: layout style;
  outline: none;
  cursor: pointer;
  z-index: 0;
  box-sizing: border-box;
  appearance: none;
  font-weight: $weight-bold;
  border-radius: $radius;

  &::-moz-focus-inner {
    border: 0;
  }

  &.is-loading {
    cursor: not-allowed;
    &::after {
      top: 12px;
    }
  }

  &.is-disabled.is-inverted {
    opacity: 0.48;
  }

  &:focus,
  &:focus:not(:active) {
    box-shadow: none;
  }

  &:focus-visible,
  &:focus-visible:not(:active) {
    box-shadow: $button-focus-box-shadow-size $button-focus-box-shadow-color;
  }

  @each $name, $pair in $button-colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);
    $color-4: nth($pair, 3);
    $color-3: nth($pair, 4);
    $color-2: nth($pair, 5);
    $color-1: nth($pair, 6);
    $color-0: nth($pair, 7);

    &.is-inverted {
      &:hover,
      &.is-hovered {
        background: $gray-3;
      }

      &:focus {
        box-shadow: none;
      }

      &:focus-visible,
      &.is-focused {
        &:not(:active):not(:hover) {
          background: $gray-2;
        }
      }

      &:active,
      &.is-active {
        background: $gray-4;
      }
    }

    &.is-#{$name} {
      &:not(.is-inverted) {
        &:focus {
          box-shadow: none;
        }
        &:focus-visible,
        &.is-focused {
          box-shadow: $button-focus-box-shadow-size $button-focus-box-shadow-color;
        }
        &:hover,
        &.is-hovered {
          background-color: $color-3;
        }
        &:active,
        &.is-active {
          background-color: $color-4;
        }
      }
      &.is-outlined:not(.is-inverted) {
        &:hover,
        &.is-hovered {
          color: $color;
          background-color: $color-0;
        }
        &:focus {
          box-shadow: none;
          background: transparent;
          color: $color;
        }
        &:focus-visible,
        &.is-focused {
          color: $color;
          background-color: transparent;
          box-shadow: $button-focus-box-shadow-size $button-focus-box-shadow-color;

          &:hover,
          &.is-hovered {
            background-color: $color-0;
          }
          &:active,
          &.is-active {
            background-color: $color-1;
          }
        }
        &:active,
        &.is-active {
          color: $color;
          background-color: $color-1;
        }
      }
      &.is-outlined.is-inverted,
      &.is-inverted {
        &:hover,
        &.is-hovered {
          background: $gray-3;
          border-color: $gray-3;
        }

        &:focus {
          box-shadow: none;
          background: transparent;
          color: $color-invert;
        }

        &:focus-visible,
        &.is-focused {
          &:not(:active):not(:hover) {
            background: $gray-2;
            border-color: $gray-2;
          }
        }

        &:active,
        &.is-active {
          background: $color-4;
          border-color: $color-4;
          color: $color-invert;
        }

        &.is-disabled {
          opacity: 0.48;
        }
      }
    }
  }

  &.is-disabled.is-outlined,
  &.is-disabled {
    color: $gray !important;
    background-color: $button-disabled-background-color !important;
    border-color: $button-disabled-border-color !important;

    &.is-loading {
      color: $button-disabled-background-color !important;
      &::after {
        border-color: transparent transparent $gray $gray !important;
      }
    }
  }

  &.is-inverted {
    &.is-disabled.is-outlined {
      background-color: transparent !important;
      color: $button-disabled-border-color !important;
      border-color: $button-disabled-border-color !important;

      &.is-loading {
        color: transparent !important;
        &::after {
          border-color: transparent transparent $button-disabled-border-color $button-disabled-border-color !important;
        }
      }
    }
  }

  &.is-square {
    width: $height-medium;
    padding: 0;
  }

  &.is-size-small {
    min-height: $height-small;
    max-height: $height-small;
    min-width: $height-small;
    padding-left: 12px;
    padding-right: 12px;
    padding-top: 0px;
    padding-bottom: 0px;

    font-size: $size-small;
    line-height: 20px;

    &.is-square {
      width: $height-small;
    }
  }

  @include desktop() {
    &.is-size-large {
      min-height: $height-large;
      max-height: $height-large;
      min-width: $height-large;

      &.is-square {
        width: $height-large;
        padding: 0;
      }
    }
  }

  & > span {
    &:first-child:not(:empty) {
      margin-left: -4px;
      margin-right: 8px;
    }

    &:last-child:not(:empty) {
      margin-left: 8px;
      margin-right: -4px;
    }
  }
}

.is-link {
  text-decoration: underline;
  background-color: transparent !important;
  border-color: transparent !important;

  &:not(.is-inverted) {
    &:hover,
    &.is-hovered {
      color: $primary-6 !important;
    }

    &:focus-visible,
    &.is-focused {
      &:not(:active):not(:hover) {
        color: $primary-7 !important;
        box-shadow: $button-focus-box-shadow-size $button-focus-box-shadow-color;
      }
    }

    &:active,
    &.is-active {
      color: $primary-9 !important;
    }
  }

  &.is-disabled {
    background-color: transparent !important;
    border-color: transparent !important;
  }

  &.is-inverted {
    color: $white !important;

    &:hover,
    &.is-hovered {
      color: $gray-2 !important;
    }

    &:focus-visible,
    &.is-focused {
      &:not(:active) {
        color: $gray-3 !important;
        box-shadow: $button-focus-box-shadow-size $primary-2 !important;
      }
    }

    &:active,
    &.is-active {
      color: $gray-4 !important;
    }
  }
}
